#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# Enable stats on :9000/haproxy_stats (no auth required)

listen stats
    bind 0.0.0.0:9000
    mode http
    stats enable
    stats uri /haproxy_stats

#---------------------------------------------------------------------
# Proxy api-server traffic on the 6443 
#
# Note: after bootstrap machine initializes the control-plane, you
#       should remove bootstrap from backend servers
#---------------------------------------------------------------------

frontend ocp-api-server_6443
    bind *:6443
    mode tcp
    option tcplog
    default_backend ocp-api-server_6443

backend ocp-api-server_6443
    mode tcp
    balance roundrobin
    option tcplog
    option log-health-checks
    option redispatch
    log global

{% for item in bootstrap_list %}
    server {{ item.name }} {{ item.ip }}:6443 check
{% endfor %}
{% for item in masters_list %}
    server {{ item.name }} {{ item.ip }}:6443 check
{% endfor %}

#---------------------------------------------------------------------
# Proxy machine-config traffic on the 22623
#
# Note: after bootstrap machine initializes the control-plane, you
#       should remove bootstrap from backend servers
#---------------------------------------------------------------------

frontend ocp-machine-config-server_22623
    bind *:22623
    mode tcp
    option tcplog
    default_backend ocp-machine-config-server_22623

backend ocp-machine-config-server_22623
    mode tcp
    balance roundrobin
    option tcplog
    option log-health-checks
    option redispatch
    log global

{% for item in bootstrap_list %}
    server {{ item.name }} {{ item.ip }}:22623 check
{% endfor %}
{% for item in masters_list %}
    server {{ item.name }} {{ item.ip }}:22623 check
{% endfor %}

#---------------------------------------------------------------------
# Proxy ingress traffic on the 443 (https)
#---------------------------------------------------------------------

frontend ingress-https_443
    bind *:443
    mode tcp
    option tcplog
    default_backend ingress-https_443

backend ingress-https_443
    mode tcp
    balance roundrobin
    option tcplog
    option log-health-checks
    option redispatch
    log global

{% for item in workers_list %}
    server {{ item.name }} {{ item.ip }}:443 check
{% endfor %}

#---------------------------------------------------------------------
# Proxy ingress traffic on the 80 (http)
#---------------------------------------------------------------------

frontend ingress-http_80
    bind *:80
    mode tcp
    option tcplog
    default_backend ingress-http_80

backend ingress-http_80
    mode tcp
    balance roundrobin
    option tcplog
    option log-health-checks
    option redispatch
    log global

{% for item in workers_list %}
    server {{ item.name }} {{ item.ip }}:80 check
{% endfor %}
